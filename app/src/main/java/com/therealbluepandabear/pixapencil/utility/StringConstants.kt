package com.therealbluepandabear.pixapencil.utility

/**
 * In the future, I will remove this to support different languages inside the app.
 *
 * Though for now, I will leave this file until I decide on adding support for more languages.
 */

object StringConstants {
    const val AppName = "PixaPencil"

    const val ProjectTitleExtra = "ProjectTitleExtra"
    const val WidthExtra = "WidthExtra"
    const val HeightExtra = "HeightExtra"
    const val IndexExtra = "IndexExtra"

    const val DialogPositiveButtonText = "OK"
    const val DialogNegativeButtonText = "Cancel"
    const val DialogExceptionInfoTitle = "Exception Info"
    const val DialogViewFileErrorTitle = "Error trying to view file"
    const val DialogClearCanvasTitle = "Clear canvas"
    const val DialogClearCanvasMessage = "Are you sure you want to clear the canvas?"
    const val DialogUnsavedChangesTitle = "Unsaved changes"
    const val DialogUnsavedChangesMessage = "You have unsaved changes, are you sure you want to exit?"

    const val SnackbarViewExceptionInfoButtonText = "View"
    const val SnackbarCannotDeletePrimaryColorPaletteText = "Cannot delete default color palette"
    const val SnackbarFindAndReplaceWarning = "You must have at least one color on your canvas to use this tool"

    const val FragmentNewProjectTitle = "New Project"
    const val FragmentFindAndReplaceTitle = "Find and Replace"
    const val FragmentColorPickerTitle = "Select Color"
    const val FragmentNewColorPaletteTitle = "New Color Palette"
    const val FragmentSprayToolSettingsTitle = "Spray Tool Settings"

    const val ColorFilterIdentifier = "ColorFilter"
    const val DarkenFilterIdentifier = "DarkenFilter"
    const val LightenFilterIdentifier = "LightenFilter"
    const val InvertFilterIdentifier = "InvertFilter"
    const val GrayscaleFilterIdentifier = "GrayscaleFilter"

    const val PencilToolIdentifier = "PencilTool"
    const val FillToolIdentifier = "FillTool"
    const val VerticalMirrorToolIdentifier = "VerticalMirrorTool"
    const val HorizontalMirrorToolIdentifier = "HorizontalMirrorTool"
    const val LineToolIdentifier = "LineTool"
    const val RectangleToolIdentifier = "RectangleTool"
    const val OutlinedRectangleToolIdentifier = "OutlinedRectangleTool"
    const val SquareToolIdentifier = "SquareTool"
    const val OutlinedSquareToolIdentifier = "OutlinedSquareTool"
    const val CircleToolIdentifier = "CircleTool"
    const val OutlinedCircleToolIdentifier = "OutlinedCircleTool"
    const val SprayToolIdentifier = "SprayTool"
    const val PolygonToolIdentifier = "PolygonTool"
    const val DitherToolIdentifier = "DitherTool"
    const val DarkenToolIdentifier = "DarkenTool"
    const val LightenToolIdentifier = "LightenTool"
    const val ColorPickerToolIdentifier = "ColorPickerTool"
    const val EraseToolIdentifier = "EraseTool"
    const val GridToolIdentifier = "GridTool"

    const val PencilToolInfoTitle = "Pencil Tool Info"
    const val FillToolInfoTitle = "Fill Tool Info"
    const val VerticalMirrorToolInfoTitle = "Vertical Mirror Tool Info"
    const val HorizontalMirrorToolInfoTitle = "Horizontal Mirror Tool Info"
    const val LineToolInfoTitle = "Line Tool Info"
    const val RectangleToolInfoTitle = "Rectangle Tool Info"
    const val OutlinedRectangleToolInfoTitle = "Outlined Rectangle Tool Info"
    const val SquareToolInfoTitle = "Square Tool Info"
    const val OutlinedSquareToolInfoTitle = "Outlined Square Tool Info"
    const val CircleToolInfoTitle = "Circle Tool Info"
    const val OutlinedCircleToolInfoTitle = "Outlined Circle Tool Info"
    const val SprayToolInfoTitle = "Spray Tool Info"
    const val PolygonToolInfoTitle = "Polygon Tool Info"
    const val DitherToolInfoTitle = "Dither Tool Info"
    const val DarkenToolInfoTitle = "Darken Tool Info"
    const val LightenToolInfoTitle = "Lighten Tool Info"
    const val ColorPickerToolInfoTitle = "Color Picker Tool Info"
    const val EraseToolInfoTitle = "Erase Tool Info"

    const val PencilToolInfoText = "Draw freehand, pixelated paths."
    const val FillToolInfoText = "Fill adjacent pixels which are similar in color value."
    const val VerticalMirrorToolInfoText = "Vertically reflect your freehand, pixelated paths."
    const val HorizontalMirrorToolInfoText = "Horizontally reflect your freehand, pixelated paths."
    const val LineToolInfoText = "Draw pixelated lines."
    const val RectangleToolInfoText = "Draw filled, pixelated rectangles."
    const val OutlinedRectangleToolInfoText = "Draw outlined, pixelated rectangles."
    const val SquareToolInfoText = "Draw filled, pixelated squares."
    const val OutlinedSquareToolInfoText = "Draw outlined, pixelated squares."
    const val CircleToolInfoText = "Draw filled, pixelated circles."
    const val OutlinedCircleToolInfoText = "Draw outlined, pixelated circles."
    const val SprayToolInfoText = "Simulate real-life spray paint."
    const val PolygonToolInfoText = "Draw polygonal paths."
    const val DitherToolInfoText = "Draw checkerboard patterns, good for shading."
    const val DarkenToolInfoText = "Darken selected color."
    const val LightenToolInfoText = "Lighten selected color."
    const val ColorPickerToolInfoText = "Get the color at the specified pixel."
    const val EraseToolInfoText = "Erase pixels."

    const val SharedPreferenceFirstLaunchIdentifier = "FirstLaunchIdentifier"
    const val SharedPreferencePixelPerfectIdentifier = "PixelPerfectSharedPreference"
    const val SharedPreferencesSprayRadiusIdentifier = "SprayRadiusSharedPreference"
    const val SharedPreferencesSprayStrengthIdentifier = "SprayStrengthSharedPreference"

    const val ExceptionInvalidWidthHeightMessage = "Invalid width/height value"
    const val ExceptionInvalidRadiusStrengthMessage = "Invalid radius/strength"
    const val ExceptionAccessingNegativeIndex = "Cannot access pixel art object with a negative index in list!"

    const val prevOrientationBundleIdentifier = "PrevOrientation"
    const val prevBitmapStrBundleIdentifier = "PrevBitmapStr"

    const val DefaultToolbarItemColor = "#0099cc"
    const val PixelGridViewCheckerboardColor = "#d9d9d9"
    const val SnackbarBackgroundColor = "#eaddff"
}